<?php
// $Id: asia.module, v1.0 2012/06/07

/******************************/
/* Includes necessaris        */
/******************************/

include 'functions-asia_list.php';


/**
 * Implementation of hook_init().
 */

/*function asia_list_init() {

	drupal_add_js(drupal_get_path('module', 'asia') .'./js/jquery-ready-asia.js');
 
}*/



/**
 * Implementation of hook_theme().
 */

function asia_list_theme($existing, $type, $theme, $path ) {
	return array(
 
 		'properes_activitats' => array(
			'variables' => array('arrXml' => NULL),
			'template' => 'templates/properes_activitats',
			'path' => drupal_get_path('module', 'asia_list'),
		),	
		'properes_activitats2col' => array(
			'variables' => array('arrXml' => NULL),
			'template' => 'templates/properes_activitats2col',
			'path' => drupal_get_path('module', 'asia_list'),
		),			
				
	);
}


/**
 * Implementation of hook_block().
 */

function asia_list_block_info() {
	$blocks[0] = array(
      'info' => t('ASIA: Coming activities'), 
      'weight' => 0, 
      'status' => 1, 
      'region' => 'Disabled',
    );
	return $blocks;
}

 function asia_list_block_view($delta = ''){ 
 
	//Recull idioma
		global $language;
		$lang = $language->language; 

 	// Recollir variable de configuració "Activar recollida de districte"
	
		$settings_asia_list = variable_get('settings_asia_list', '');
 	
	// Si esta activada la recollida de variable 
	// Inicia i recull la variable districte si ve
	
	$subject = t('Coming activities');
	
	if($settings_asia_list[2]==2){
		$districtstr ="";
 		if(isset($_GET["districtstr"])){
	 		$districtstr = $_GET["districtstr"];
		}
		// Si ve districte canvia el titol del block
		if(hasValue($districtstr)){
		
			
				switch ($lang) {
				 case 'ca':	  
					$subject = "Properes activitats del districte ".parsejaComilles($districtstr);
				 break;
				 case 'es':	  
					$subject = "Próximas actividades del districto ".parsejaComilles($districtstr);
				 break;
				default:	
				 	$subject = parsejaComilles($districtstr).' district upcoming activities';
				break;	
				}
		
		
		
			
		}
		
	}
	
 	
 	switch ($delta) {
      case 0:
     	$block = array(
          'subject' => $subject,          
          'content' => mostra_form_prox_activitats(),
        );
		break;		
    }
    return $block;
}

function asia_list_block_configure($delta = ''){ 
$default0="";
$default1="";
    switch ($delta) {		
		case 0:
			if(hasValue(variable_get('code0', ''))) $default0 = variable_get('code0', '');
		
			$form['codi0'] = array(
			  '#type' => 'textfield', 
			  '#title' => t("Search under first-level classification of what’s on or amenities tree (code0)"), 
			  '#default_value' => $default0,
  			  '#description' => t('Optional field'),
			);
			
			if(hasValue(variable_get('code1', ''))) $default1 = variable_get('code1', '');
			
			$form['codi1'] = array(
			  '#type' => 'textfield', 
			  '#title' => t("Search under second-level classification of what’s on or amenities tree (code1)"), 
			  '#default_value' => $default1,
			  '#description' => t('Optional field'),
			);
		
			$form['nr'] = array(
			  '#type' => 'textfield', 
			  '#title' => t('Number of results to be shown'), 
			  '#default_value' => variable_get('nresult',  5),
			 
			);
			
			$form['settings_asia_list'] = array(
			'#type' => 'checkboxes', 
			'#title' => t('Settings '), 
			'#default_value' => variable_get('settings_asia_list', array(1 => 1, 2 => 0)),
			'#options' => array ( 
				1 => t('Active "More activities" link'),		
				2 => t('Prepend district. If enabled, the default search is the district that is given by URL, if not a generic search.'),	  
			),
			);
			
			$form['columns'] = array(
			  '#type' => 'radios', 
			  '#title' => t('Number of columns to be shown'), 
			  '#default_value' => variable_get('columns', 1),
			  '#options' => array ( 
				1 => t('1 column'),			  
				2 => t('2 columns'),			  
				),
			 
			);
			
			$form['fieldsshow'] = array(
				'#type' => 'checkboxes', 
				'#title' => t('Fields show'), 
				'#default_value' => variable_get('fieldsshow', array(1 => 1, 2 => 2, 3 => 3, 4 => 4, 5 => 0)),
				'#options' => array ( 
					1 => t('Show picture'),
					2 => t('Show when'),
					3 => t('Show where'),				
					4 => t('Show address & district'),	
					5 => t('Show phones'),						  
				),
			);
			
			
			
			
			// Mostrem un radiobuttom per la selecció del tipus de visualització:
			if(variable_get('showPeriode', 0)) $default = variable_get('showPeriode', 0);			
			else $default = 'setmana'; 
			
			$form['periode'] = array(
			  '#type' => 'radios', 
			  '#title' => t('Activities to be shown'), 
			  '#default_value' =>  $default,
			  '#options' => array (
			  		  'totes' => t('All'),
					  'avui' => t('Today'),
					  'dema' => t('Tomorrow'),
					  'cap' => t('This Weekend'), 
					  'caps' => t('Weekends'),
					  'setmana' => t('Next 7 days'),
					  'mes' => t('Next 30 days'),
					  'rang' => t('Time frame'),
					  
		       ),
			 '#prefix' => '<div id="field-periode">',
			 '#suffix' => '</div>',


			);
			
		
			if(variable_get('dataInicial', 0)){
				$default = variable_get('dataInicial', 0);
			}else{
			 	$default=date("Y-m-d");			
			 }
							
			$form['dateIni'] = array(
			  '#type' => 'date_popup', 
			  '#title' => t('Initial date'), 
			  '#date_format' => 'Y-m-d',			  
			  '#default_value' => $default,	 
			  '#attributes' => array('class' => array('calendari')), 

			
			);
			
			if(variable_get('dataFinal', 0)) {
				$default = variable_get('dataFinal', 0);
			}else{
				 $default=date("Y-m-d");			
			 }
		
			$form['dateFi'] = array(
			  '#type' => 'date_popup', 
			  '#title' => t('Final Date'), 
			  '#date_format' => 'Y-m-d',			  
			  '#default_value' => $default,	
			 '#attributes' => array('class' => array('calendari')), 

			);
			
		break;
		
		
	}
	return $form;
}


function asia_list_block_save($delta = '', $edit = array()) { 

    switch ($delta) {
		case 0:		
		variable_set('settings_asia_list', $edit['settings_asia_list']);
		variable_set('code0', $edit['codi0']);
		variable_set('code1', $edit['codi1']);
		variable_set('columns', $edit['columns']);
		variable_set('fieldsshow', $edit['fieldsshow']);
		
		if(is_numeric($edit['nr'])){
			variable_set('nresult', $edit['nr']);	
		}else{
			form_set_error('', t('Incorrect number of results.'));
		}
		
		// Guardem en 'showPeriode' l'opció escollida:
		variable_set('showPeriode', $edit['periode']);
		if ($edit['periode']=='rang'){
			
			$dateIni=date('Y-m-d', strtotime($edit['dateIni']));
			$dateFin=date('Y-m-d', strtotime($edit['dateFi']));
			
			if ($dateFin>=$dateIni){
				variable_set('dataInicial', $dateIni);
				variable_set('dataFinal', $dateFin);
			}else{
				form_set_error('', t('Incorrect period: the final date must be later than the initial date.'));
			}
		}else{
			variable_set('dataInicial', '');
			variable_set('dataFinal', '');
		}
		break;
	}
}




